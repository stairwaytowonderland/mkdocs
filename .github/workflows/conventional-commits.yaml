name: Validate Conventional Commits

# Ref: https://docs.github.com/en/actions/reference/workflows-and-actions/workflow-syntax#filter-pattern-cheat-sheet
on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_call:
    inputs:
      base-ref:
        type: string
        description: 'Base reference to compare commits against (e.g., main, master)'
        required: false
        default: 'origin/main'
      fail-on-error:
        type: boolean
        description: 'Whether to fail the action if non-conventional commits are found'
        required: false
        default: true
      types:
        type: string
        description: 'Comma-separated list of allowed commit types'
        required: false
        default: 'feat,fix,docs,style,refactor,perf,test,build,ci,chore,revert'
      scopes:
        type: string
        description: 'Comma-separated list of allowed scopes (leave empty to allow any; example: "api,ui,core,docs")'
        required: false
    outputs:
      valid:
        description: 'Status of conventional commits validation (valid/invalid)'
        value: ${{ jobs.validate-commits.outputs.conventional-commits-valid }}
      commit-count:
        description: 'Total number of commits checked'
        value: ${{ jobs.validate-commits.outputs.commit-count }}

jobs:
  validate-commits:
    name: Validate Commit Messages
    runs-on: ubuntu-latest

    outputs:
      conventional-commits-valid: ${{ steps.conventional-commits.outputs.valid == 'true' }}
      commit-count: ${{ steps.conventional-commits.outputs.commit-count }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Check if merge commit
        id: check-merge
        run: |
          # Check if the pushed commit has multiple parents (true merge)
          PARENT_COUNT=$(git rev-list --parents -n 1 HEAD | wc -w)
          # A merge commit has 3+ words (commit hash + 2+ parent hashes)
          if [ "$PARENT_COUNT" -gt 2 ]; then
            echo "is_merge=true" >> $GITHUB_OUTPUT
            echo "This is a merge commit (has $((PARENT_COUNT - 1)) parents)"
          else
            echo "is_merge=false" >> $GITHUB_OUTPUT
            echo "This is a regular commit"
          fi

      - name: Validate conventional commits
        if: github.event_name == 'pull_request' || steps.check-merge.outputs.is_merge != 'true'
        id: conventional-commits
        uses: ./.github/actions/conventional-commits
        with:
          base-ref: 'origin/${{ github.event.repository.default_branch }}'
          types: 'feat,fix,docs,style,refactor,perf,test,build,ci,chore,revert'

      - name: Comment on PR (if validation fails)
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ‚ùå Conventional Commits Validation Failed

              Your commits do not follow the [Conventional Commits](https://www.conventionalcommits.org/) specification.

              ### Required Format
              \`\`\`
              <type>[optional scope][!]: <description>

              [optional body]

              [optional footer(s)]
              \`\`\`

              ### Examples
              - \`feat: add new user authentication\`
              - \`fix(api): correct validation error\`
              - \`docs: update installation guide\`
              - \`feat!: redesign navigation (breaking change)\`

              ### Allowed Types
              - **feat**: New features
              - **fix**: Bug fixes
              - **docs**: Documentation changes
              - **style**: Code style changes (formatting, etc.)
              - **refactor**: Code refactoring
              - **perf**: Performance improvements
              - **test**: Test additions or updates
              - **build**: Build system changes
              - **ci**: CI/CD changes
              - **chore**: Other changes that don't modify src or test files
              - **revert**: Revert a previous commit

              Please amend your commits to follow this format.`
            })
